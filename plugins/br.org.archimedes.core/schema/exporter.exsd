<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="br.org.archimedes.core" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="br.org.archimedes.core" id="exporter" name="Exporter"/>
      </appinfo>
      <documentation>
         This extension point should define a general exporter that is capable of exporting the general elements of the drawing like the infos regarding the drawing itself as well as infos about the layers.

This exporter will not be responsible to export the elements. For this, it will use the elementExporter extensions defined as fragment of each element plugin.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
         <documentation>
            Basical extension definition. This will be used by RCP to register this as an extension.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  This point will be used by RCP to discover which .exsd defines the extension that will be used.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="exporter">
      <annotation>
         <documentation>
            The element exporter extension. Contains information usefull so that Archimedes can properly register the exporter to the file extension.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The id of this exporter.
Not really important.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="extension" type="string" use="required">
            <annotation>
               <documentation>
                  The file extension to which this exporter will be registered under. Very important to ensure this exporter will be called at the right moment.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  The name of this exporter. This will be used to show to the user close to the element exporter&apos;s extension on the Export dialog.
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The class that extends Exporter and will be encharged of exporting the drawing when asked to.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":br.org.archimedes.interfaces.Exporter"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         This extension point exists since Archimedes was brought to RCP.
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         The first extension created using this point was the XML exporter.
Here follows its use:
&lt;extension point=&quot;br.org.archimedes.exporter&quot;&gt;
  &lt;exporter id=&quot;br.org.archimedes.xml.exporter&quot;
   extension=&quot;xml&quot; name=&quot;XML Exporter&quot;
   class=&quot;br.org.archimedes.io.xml.XMLExporter&quot;/&gt;
&lt;/extension&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiInfo"/>
      </appinfo>
      <documentation>
         There is no API information to use this point yet.
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         Please feel free to check the br.org.archimedes.io.xml plugin since this was the first implementation of this extension point.
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="copyright"/>
      </appinfo>
      <documentation>
         For now, all content regarding Archimedes is licensed under GPL v.2.
Therefore all that regards the extension points is copyleft.
      </documentation>
   </annotation>

</schema>
